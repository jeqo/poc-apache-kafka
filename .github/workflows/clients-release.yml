name: 'clients:release'

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
      next:
        description: "Next version"
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2

      - name: 'Set up Java'
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'zulu'

      - name: 'Cache Maven packages'
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Build'
        working-directory: clients
        run: ./mvnw -B --no-transfer-progress --file pom.xml verify
  release:
#    if: startsWith(github.event.head_commit.message, 'üèÅ Releasing version') != true && startsWith(github.event.head_commit.message, '‚¨ÜÔ∏è  Next version') != true
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2

      - name: 'Set up Java'
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'zulu'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: 'Cache Maven packages'
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Release
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          # TODO: fix once nexus plugin supports jdk17
          MAVEN_OPTS: --illegal-access=permit
          JDK_JAVA_OPTIONS: '--add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.reflect=ALL-UNNAMED --add-opens java.base/java.text=ALL-UNNAMED --add-opens java.desktop/java.awt.font=ALL-UNNAMED'
        working-directory: clients
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          # export GPG_TTY=$(tty)
          ./mvnw --no-transfer-progress -B --file pom.xml \
            -Drepository.url=https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git \
            -DreleaseVersion=${{ github.event.inputs.version }} -DdevelopmentVersion=${{ github.event.inputs.next }} \
            release:prepare release:perform

