<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.github.jeqo.kafka</groupId>
  <artifactId>kafka-cli-producer-datagen</artifactId>
  <version>0.1.5-SNAPSHOT</version>

  <name>kafka-cli-producer-datagen</name>
  <description>Kafka CLI: Producer Datagen</description>
  <inceptionYear>2022</inceptionYear>
  <url>https://github.com/jeqo/poc-apache-kafka</url>

  <developers>
    <developer>
      <id>jeqo</id>
      <name>Jorge Esteban Quilcate Otoya</name>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://github.com/jeqo/poc-apache-kafka/blob/main/cli/producer-datagen/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <java.version>17</java.version>
    <executable-suffix/>

    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.release>${java.version}</maven.compiler.release>

    <kafka.version>3.1.0</kafka.version>
    <confluent.avro.generator.version>0.4.1</confluent.avro.generator.version>
    <confluent.version>7.0.1</confluent.version>
    <picocli.version>4.6.3</picocli.version>
    <jackson.version>2.13.2</jackson.version>

    <jreleaser.git.root.search>true</jreleaser.git.root.search>

    <app.name>${project.artifactId}</app.name>
    <app.version>${project.version}</app.version>
    <app.buildtime>${maven.build.timestamp}</app.buildtime>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>${kafka.version}</version>
    </dependency>

    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli-codegen</artifactId>
      <version>${picocli.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.36</version>
    </dependency>
    <dependency>
      <groupId>org.graalvm.nativeimage</groupId>
      <artifactId>svm</artifactId>
      <version>22.0.0.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.github.jeqo.kafka</groupId>
      <artifactId>kafka-clients-graalvm</artifactId>
      <version>0.1.1</version>
    </dependency>
    <dependency>
      <groupId>io.github.jeqo.kafka</groupId>
      <artifactId>avro-graalvm</artifactId>
      <version>0.1.1</version>
    </dependency>
    <dependency>
      <groupId>io.github.jeqo.kafka</groupId>
      <artifactId>kafka-context</artifactId>
      <version>0.2.0</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <version>${confluent.version}</version>
    </dependency>
    <dependency>
      <groupId>io.confluent.avro</groupId>
      <artifactId>avro-random-generator</artifactId>
      <version>${confluent.avro.generator.version}</version>
    </dependency>
  </dependencies>

  <build>
    <!-- detect OS classifier, needed for distribution Zip file -->
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.0</version>
      </extension>
    </extensions>
    <resources>
      <resource>
        <!-- Filter for version name in properties -->
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.9.0</version>
          <configuration>
            <parameters>true</parameters>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M5</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.10.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.16</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <parameters>${maven.compiler.parameters}</parameters>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-plugin-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[${java.version},)</version>
                </requireJavaVersion>
                <requirePluginVersions>
                  <banLatest>true</banLatest>
                  <banRelease>true</banRelease>
                  <banSnapshots>true</banSnapshots>
                  <phases>clean,deploy,site</phases>
                </requirePluginVersions>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <attach>false</attach>
          <appendAssemblyId>false</appendAssemblyId>
          <finalName>kfk-producer-datagen-${project.version}-${os.detected.classifier}</finalName>
          <outputDirectory>${app.distribution.directory}</outputDirectory>
          <workDirectory>${project.build.directory}/assembly/work</workDirectory>
          <skipAssembly>true</skipAssembly>
        </configuration>
        <executions>
          <execution>
            <id>make-distribution</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>0.9.7.1</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
              <execution>
                <id>test-native</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <phase>test</phase>
              </execution>
            </executions>
            <configuration>
              <buildDirectory>bin/</buildDirectory>
              <imageName>kfk-producer-datagen-${project.version}</imageName>
              <mainClass>kafka.cli.producer.datagen.Cli</mainClass>
              <buildArgs>
                <buildArg>--no-fallback</buildArg>
                <buildArg>--allow-incomplete-classpath</buildArg>
                <buildArg>-H:AdditionalSecurityProviders=com.sun.security.sasl.Provider</buildArg>
                <buildArg>--initialize-at-run-time=org.apache.kafka.common.security.authenticator.SaslClientAuthenticator</buildArg>
                <buildArg>--initialize-at-build-time=org.slf4j.LoggerFactory,org.slf4j.impl.StaticLoggerBinder,org.slf4j.impl.SimpleLogger,org.apache.kafka,kafka,net.jpountz.util.Utils,com.fasterxml.jackson,jdk.xml,javax.xml,com.sun.org.apache.xerces,org.yaml.snakeyaml</buildArg>
                <buildArg>--enable-url-protocols=http</buildArg>
                <buildArg>--enable-url-protocols=https</buildArg>
                <buildArg>-H:ReflectionConfigurationFiles=../src/main/resources/META-INF/native-image/io.github.jeqo.kafka/kafka-clis/reflect-kafka-client.json,../src/main/resources/META-INF/native-image/io.github.jeqo.kafka/kafka-clis/reflect-schema-registry.json</buildArg>
                <buildArg>-H:Log=registerResource:3</buildArg>
                <buildArg>-H:ResourceConfigurationFiles=../src/main/resources/META-INF/native-image/io.github.jeqo.kafka/kafka-clis/resource-config.json</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dist</id>
      <activation>
        <property>
          <name>dist</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration combine.self="append">
              <skipAssembly>false</skipAssembly>
              <descriptors>
                <descriptor>src/main/assembly/assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>dist-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <executable-suffix>.exe</executable-suffix>
      </properties>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jreleaser</groupId>
            <artifactId>jreleaser-maven-plugin</artifactId>
            <version>1.0.0-M2</version>
            <configuration>
              <jreleaser>
                <project>
                  <name>kafka-cli-producer-datagen</name>
                  <java>
                    <mainClass>kafka.cli.producer.datagen.Cli</mainClass>
                  </java>
                  <snapshot>
                    <label>{{ projectVersionNumber }}-early-access</label>
                  </snapshot>
                </project>
                <release>
                  <github>
                    <owner>jeqo</owner>
                    <name>poc-apache-kafka</name>
                    <tagName>cli-producer-datagen-v{{projectVersion}}</tagName>
                    <releaseName>cli:producer-datagen v{{projectVersion}}</releaseName>
                    <overwrite>true</overwrite>
                  </github>
                </release>
                <packagers>
                  <brew>
                    <active>RELEASE</active>
                    <continueOnError>true</continueOnError>
                    <multiPlatform>true</multiPlatform>
                  </brew>
                </packagers>
                <distributions>
                  <kfk-producer-datagen>
                    <name>kfk-producer-datagen</name>
                    <type>NATIVE_IMAGE</type>
                    <artifacts>
                      <artifact>
                        <path>{{artifactsDir}}/{{distributionName}}-{{projectVersion}}-linux-x86_64.tar.gz</path>
                        <transform>artifacts/{{distributionName}}-{{projectEffectiveVersion}}-linux-x86_64.tar.gz</transform>
                        <platform>linux-x86_64</platform>
                      </artifact>
                      <artifact>
                        <path>{{artifactsDir}}/{{distributionName}}-{{projectVersion}}-linux-x86_64.zip</path>
                        <transform>artifacts/{{distributionName}}-{{projectEffectiveVersion}}-linux-x86_64.zip</transform>
                        <platform>linux-x86_64</platform>
                      </artifact>
                      <artifact>
                        <path>{{artifactsDir}}/{{distributionName}}-{{projectVersion}}-windows-x86_64.zip</path>
                        <transform>artifacts/{{distributionName}}-{{projectEffectiveVersion}}-windows-x86_64.zip</transform>
                        <platform>windows-x86_64</platform>
                      </artifact>
                      <artifact>
                        <path>{{artifactsDir}}/{{distributionName}}-{{projectVersion}}-osx-x86_64.zip</path>
                        <transform>artifacts/{{distributionName}}-{{projectEffectiveVersion}}-osx-x86_64.zip</transform>
                        <platform>osx-x86_64</platform>
                      </artifact>
                    </artifacts>
                  </kfk-producer-datagen>
                </distributions>
              </jreleaser>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>docs</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>generateManPages</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <includeProjectDependencies>true</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>
              <mainClass>picocli.codegen.docgen.manpage.ManPageGenerator</mainClass>
              <arguments>
                <argument>--outdir=docs</argument>
                <argument>kafka.cli.producer.datagen.Cli</argument>
              </arguments>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli-codegen</artifactId>
                <version>4.6.3</version>
                <type>jar</type>
              </dependency>
            </dependencies>
          </plugin>

          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <version>2.1.0</version>
            <executions>
              <execution>
                <id>output-html</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>html5</backend>
                </configuration>
              </execution>
              <execution>
                <id>output-manpage</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>manpage</backend>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <sourceDirectory>docs</sourceDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2</url>
    </repository>
    <repository>
      <id>confluent</id>
      <url>https://packages.confluent.io/maven/</url>
    </repository>
  </repositories>
</project>