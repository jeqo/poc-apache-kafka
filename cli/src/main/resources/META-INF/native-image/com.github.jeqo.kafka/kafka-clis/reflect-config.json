[
  {
    "name": "com.sun.security.sasl.ClientFactoryImpl",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.clients.consumer.RangeAssignor",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.security.authenticator.AbstractLogin$DefaultLoginCallbackHandler",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.security.authenticator.DefaultLogin",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.kafka.common.security.plain.PlainLoginModule",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "sun.security.pkcs.SignerInfo[]"
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLSContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.apache.commons.compress.archivers.ArchiveOutputStream",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.serializers.context.NullContextNameStrategy",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.serializers.subject.TopicNameStrategy",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.serializers.subject.TopicRecordNameStrategy",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.serializers.subject.RecordNameStrategy",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.ErrorMessage",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.Schema",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.Config",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.SchemaReference",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.SchemaString",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.SchemaTypeConverter",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.ServerClusterId",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.SubjectVersion",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.requests.CompatibilityCheckResponse",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.requests.ConfigUpdateRequest",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.requests.ModeGetResponse",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.requests.ModeUpdateRequest",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.requests.RegisterSchemaRequest",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.rest.entities.requests.RegisterSchemaResponse",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.security.basicauth.BasicAuthCredentialProvider",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.security.basicauth.BasicAuthCredentialProvider",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.security.basicauth.SaslBasicAuthCredentialProvider",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.security.basicauth.UrlBasicAuthCredentialProvider",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "io.confluent.kafka.schemaregistry.client.security.basicauth.UserInfoCredentialProvider",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  }
]